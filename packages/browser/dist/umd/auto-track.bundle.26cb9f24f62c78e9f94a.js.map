{"version":3,"file":"auto-track.bundle.26cb9f24f62c78e9f94a.js","mappings":"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","sources":["webpack://@tronic/receiver-browser/./src/core/auto-track.ts"],"sourcesContent":["import { Receiver } from './receiver'\nimport { EventProperties, Options } from './events'\nimport { pTimeout } from './callback'\n\n// const channelId = '';\n\n// Check if a user is opening the link in a new tab\nfunction userNewTab(event: Event): boolean {\n  const typedEvent = event as Event & {\n    ctrlKey: boolean\n    shiftKey: boolean\n    metaKey: boolean\n    button: number\n  }\n  if (\n    typedEvent.ctrlKey ||\n    typedEvent.shiftKey ||\n    typedEvent.metaKey ||\n    (typedEvent.button && typedEvent.button == 1)\n  ) {\n    return true\n  }\n  return false\n}\n\n// Check if the link opens in new tab\nfunction linkNewTab(element: HTMLAnchorElement, href: string | null): boolean {\n  if (element.target === '_blank' && href) {\n    return true\n  }\n  return false\n}\n\nexport interface JQueryShim<TElement = HTMLElement> {\n  toArray(): TElement[]\n}\n\nexport function link(\n  this: Receiver,\n  links: Element | Array<Element> | JQueryShim | null,\n  event: string | Function,\n  properties?: EventProperties | Function,\n  options?: Options\n): Receiver {\n  let elements: Array<Element> = []\n  // always arrays, handles jquery\n  if (!links) {\n    return this\n  }\n  if (links instanceof Element) {\n    elements = [links]\n  } else if ('toArray' in links) {\n    elements = links.toArray()\n  } else {\n    elements = links\n  }\n\n  elements.forEach((el: Element) => {\n    el.addEventListener(\n      'click',\n      (elementEvent: Event) => {\n        const ev = event instanceof Function ? event(el) : event\n        const props =\n          properties instanceof Function ? properties(el) : properties\n        const href =\n          el.getAttribute('href') ||\n          el.getAttributeNS('http://www.w3.org/1999/xlink', 'href') ||\n          el.getAttribute('xlink:href') ||\n          el.getElementsByTagName('a')[0]?.getAttribute('href')\n\n        const trackEvent = pTimeout(\n          this.track(/* channelId, */ ev, props, options ?? {}),\n          this.options.timeout ?? 500\n        )\n\n        if (\n          !linkNewTab(el as HTMLAnchorElement, href) &&\n          !userNewTab(elementEvent)\n        ) {\n          if (href) {\n            elementEvent.preventDefault\n              ? elementEvent.preventDefault()\n              : (elementEvent.returnValue = false)\n            trackEvent\n              .catch(console.error)\n              .then(() => {\n                window.location.href = href\n              })\n              .catch(console.error)\n          }\n        }\n      },\n      false\n    )\n  })\n\n  return this\n}\n\nexport type LinkArgs = Parameters<typeof link>\n\nexport function form(\n  this: Receiver,\n  forms: HTMLFormElement | Array<HTMLFormElement> | null,\n  event: string | Function,\n  properties?: EventProperties | Function,\n  options?: Options\n): Receiver {\n  // always arrays, handles jquery\n  if (!forms) return this\n  if (forms instanceof HTMLFormElement) forms = [forms]\n\n  const elements = forms\n\n  elements.forEach((el) => {\n    if (!(el instanceof Element))\n      throw new TypeError('Must pass HTMLElement to trackForm/trackSubmit.')\n    const handler = (elementEvent: Event): void => {\n      elementEvent.preventDefault\n        ? elementEvent.preventDefault()\n        : (elementEvent.returnValue = false)\n\n      const ev = event instanceof Function ? event(el) : event\n      const props = properties instanceof Function ? properties(el) : properties\n\n      const trackEvent = pTimeout(\n        this.track(/* channelId, */ ev, props, options ?? {}),\n        this.options.timeout ?? 500\n      )\n\n      trackEvent\n        .catch(console.error)\n        .then(() => {\n          el.submit()\n        })\n        .catch(console.error)\n    }\n\n    // Support the events happening through jQuery or Zepto instead of through\n    // the normal DOM API, because `el.submit` doesn't bubble up events...\n\n    const $ = (window as any).jQuery || (window as any).Zepto\n    if ($) {\n      $(el).submit(handler)\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      el.addEventListener('submit', handler, false)\n    }\n  })\n\n  return this\n}\n\nexport type FormArgs = Parameters<typeof form>\n"],"names":[],"sourceRoot":""}